@use 'sass:color';
<<<<<<< HEAD
@use '../base.scss';
=======
>>>>>>> f1eb479... Merge pull request #7317 from ShadowLarkens/tgui
@use '../colors.scss';
@use '../functions.scss' as *;

// NoticeBox
$color-background: #bb9b68 !default;
$color-stripes: rgba(0, 0, 0, 0.1) !default;
$color-border: #272727 !default;
$bg-map: colors.$bg-map !default;

.NoticeBox {
  // Adapt text color to background luminance to ensure high contast
  $luminance: luminance($color-background);
  $text-color: if($luminance > 0.35,
    rgba(0, 0, 0, 1),
    rgba(255, 255, 255, 1));

<<<<<<< HEAD
  padding: 0.33em 0.5em;
  margin-bottom: 0.5em;
=======
  padding: 4px 6px;
  margin-bottom: 6px;
>>>>>>> f1eb479... Merge pull request #7317 from ShadowLarkens/tgui
  box-shadow: none;
  font-weight: bold;
  font-style: italic;
  color: $text-color;
  background-color: $color-background;
  background-image: repeating-linear-gradient(
    -45deg,
    transparent,
<<<<<<< HEAD
    transparent base.em(10px),
    $color-stripes base.em(10px),
    $color-stripes base.em(20px));
=======
    transparent 10px,
    $color-stripes 10px,
    $color-stripes 20px);
>>>>>>> f1eb479... Merge pull request #7317 from ShadowLarkens/tgui
}

@mixin box-color($color) {
  $luminance: luminance($color);
  $text-color: if($luminance > 0.35,
    rgba(0, 0, 0, 1),
    rgba(255, 255, 255, 1));
  color: $text-color;
  background-color: color.adjust(
    $color,
    $saturation: -15%,
    $lightness: -15%);
}

@each $color-name, $color-value in $bg-map {
  .NoticeBox--color--#{$color-name} {
    @include box-color($color-value)
  }
}

.NoticeBox--type--info {
  @include box-color(colors.$blue);
}

.NoticeBox--type--success {
  @include box-color(colors.$green);
}

.NoticeBox--type--warning {
  @include box-color(colors.$orange);
}

.NoticeBox--type--danger {
  @include box-color(colors.$red);
}
