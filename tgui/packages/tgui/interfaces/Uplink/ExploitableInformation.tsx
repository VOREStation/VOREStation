import { useBackend } from '../../backend';
import { Box, Button, LabeledList, Section } from '../../components';
import { Data } from './types';

export const ExploitableInformation = (props) => {
  const { act, data } = useBackend<Data>();

  const { exploit, locked_records } = data;

  return (
    <Section
      title="Exploitable Information"
      buttons={
        exploit && (
          <Button icon="undo" onClick={() => act('view_exploits', { id: 0 })}>
            Back
          </Button>
        )
      }
    >
      {(exploit && (
        <Box>
          <LabeledList>
            <LabeledList.Item label="Name">{exploit.name}</LabeledList.Item>
            <LabeledList.Item label="Sex">{exploit.sex}</LabeledList.Item>
            <LabeledList.Item label="Species">
              {exploit.species}
            </LabeledList.Item>
            <LabeledList.Item label="Age">{exploit.age}</LabeledList.Item>
            <LabeledList.Item label="Rank">{exploit.rank}</LabeledList.Item>
            <LabeledList.Item label="Home System">
              {exploit.home_system}
            </LabeledList.Item>
            <LabeledList.Item label="Birthplace">
              {exploit.birthplace}
            </LabeledList.Item>
            <LabeledList.Item label="Citizenship">
              {exploit.citizenship}
            </LabeledList.Item>
            <LabeledList.Item label="Faction">
              {exploit.faction}
            </LabeledList.Item>
            <LabeledList.Item label="Religion">
              {exploit.religion}
            </LabeledList.Item>
            <LabeledList.Item label="Fingerprint">
              {exploit.fingerprint}
            </LabeledList.Item>
            <LabeledList.Item label="Other Affiliations">
              {exploit.antagfaction}
            </LabeledList.Item>
            <LabeledList.Divider />
            <LabeledList.Item>Acquired Information</LabeledList.Item>
            <LabeledList.Item label="Notes">
              {exploit.nanoui_exploit_record.split('<br>').map((m) => (
                <Box key={m}>{m}</Box>
              ))}
            </LabeledList.Item>
          </LabeledList>
        </Box>
      )) ||
        (locked_records &&
          locked_records.map((record) => (
            <Button
              key={record.id}
              icon="eye"
              fluid
              onClick={() => act('view_exploits', { id: record.id })}
            >
              {record.name}
            </Button>
          )))}
    </Section>
  );
};
